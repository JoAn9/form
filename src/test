Your task is to create a simple app that adds or remove users from the list
1. Users should provide an email, nickname and IP address
2. Email and IP address validation
3. Add button should be disabled if validation does not pass
4. If user already exists (checked by email or nickname) the operation should be blocked 
5. Each user should be removable by corresponding remove button
6. Removing entire list should be possible
7. Removal requires confirmation
8. Remove list button should not be visible while list is empty
9. Popups informing why adding a user is not possible
10. Sorting users list by nickname, email or date

Nice to have:
1. CSS styles

class Welcome extends React.Component {
  state = {
    user: {
      name: '',
      band: '',
    },
    errorMsg: '',
  };

  handleChange = stateName => event => {
    const { user } = this.state;
    const newUser = {
      ...user,
      [stateName]: event.target.value,
    };
    this.setState({
      user: newUser,
      errorMsg: '',
    });
  };

  submitUser = event => {
    event.preventDefault();
    if(this.state.user.name === '' || this.state.user.band === '') {
      this.setState({
        errorMsg: 'Please enter your name and favourite band'
      })
    } else {
      this.setState({
        errorMsg: '',
      });
      this.props.createUser(this.state.user.name, this.state.user.band);
      this.props.history.push('/list');
    }
  };

  render() {
    const { classes } = this.props;
    return (
      <Grid container className={classes.container}>
        <Grid container direction="column" alignItems="center" justify="center">
          <form noValidate autoComplete="off" onSubmit={this.submitUser}>
            <Grid container justify="center">
              <Grid item xs={12}>
                <h2 className={classes.header}>Hello {this.state.user.name}</h2>
              </Grid>
              <Grid item xs={12} sm={6} className={classes.textFieldStyle}>
                <TextField
                  id="name"
                  fullWidth
                  label="Your Name"
                  value={this.state.user.name}
                  onChange={this.handleChange('name')}
                  margin="normal"
                />
              </Grid>
              <Grid item xs={12} sm={6} className={classes.textFieldStyle}>
                <TextField
                  id="band"
                  fullWidth
                  label="Your Favourite Band"
                  value={this.state.user.band}
                  onChange={this.handleChange('band')}
                  margin="normal"
                  // className={classes.textFieldStyle}
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <Typography variant="subheading" color="error">
                  {this.state.errorMsg}
                </Typography>
                <Button 
                  variant="raised"
                  type="submit"
                  className={classes.buttonStyle}
                  color="primary"
                >
                  Create User
                </Button>
              </Grid>
            </Grid>
          </form>
        </Grid>
      </Grid>
    );
  }
}